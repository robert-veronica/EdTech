{"ast":null,"code":"var _jsxFileName = \"/Users/sarashaikh/Library/Mobile Documents/com~apple~CloudDocs/Repos/EdTech/src/components/section-components/batch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./CSS/batch.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Batch() {\n  const [checking, setChecking] = useState(0);\n  const [AllBatches, setAllBatches] = useState([]);\n  const [AllEmployees, setAllEmployees] = useState([]);\n  const [AllCourses, setAllCourses] = useState([]);\n  const [AssignCourseID, setAssignCourseID] = useState(\"\");\n  const [batch_name, setBatch_name] = useState(\"\"); // AllEmployees.map((e) => {\n  // })\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/user/all_for_trainer_batch_create/employees').then(response => {\n      console.log(\"HEllo\"); // console.log(response.data);\n\n      setAllEmployees(response.data); // this.setState({ classes: response.data.result });\n    });\n    axios.get('http://localhost:5000/batch/1').then(response => {\n      console.log(\"All Batches API\"); // console.log(response.data);\n\n      setAllBatches(response.data); // this.setState({ classes: response.data.result });\n    });\n    axios.get('http://localhost:5000/course/all').then(response => {\n      console.log(\"All Courses API\");\n      console.log(response.data);\n      setAllCourses(response.data); // this.setState({ classes: response.data.result });\n    });\n    var temp = AllEmployees;\n\n    for (let i = 0; i < temp.length; i++) {\n      temp[i].isSelected = false;\n    } // temp.map(obj=> ({ ...obj, isSelected: 'false' }))\n\n\n    setAllEmployees(temp);\n    console.log(AllEmployees); // setRerender(!rerender);\n  }, [AllEmployees]);\n  const [selectedfornewbatch, setselectedfornewbatch] = useState([]);\n\n  const handleaddclickfornewbatch = e => {\n    console.log(e); // setselectedfornewbatch(oldArray => [...oldArray,e] )\n    // console.log(selectedfornewbatch);\n\n    var temp = AllEmployees;\n\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i]._id == e) {\n        temp[i].isSelected = true;\n        console.log(\"Heyyy\");\n        break;\n      }\n    }\n\n    setChecking(checking + 1);\n    setAllEmployees(temp);\n    console.log(AllEmployees);\n  };\n\n  const handleremoveclickfornewbatch = e => {\n    var temp = AllEmployees;\n\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i]._id == e) {\n        temp[i].isSelected = false;\n        break;\n      }\n    }\n\n    setChecking(checking - 1);\n    setAllEmployees(temp);\n  };\n\n  const handlesubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n    var ele = document.getElementById(\"alertonsubmit\");\n\n    if (checking <= 0) {\n      // ele.classList.remove(\"d-none\");\n      // ele.classList.add(\"d-block\");\n      // console.log(\"Empty\");\n      toast.error('Please Select The Employees', {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    } // ele.classList.remove(\"d-block\");\n    // ele.classList.add(\"d-none\");\n\n\n    var temp = [];\n    AllEmployees.map(a => {\n      if (a.isSelected == true) {\n        temp.push(a._id);\n      }\n    }); // Temp will contain id's of all selected employees\n\n    console.log(temp);\n    const data = {\n      batch_name: batch_name,\n      course_id: AssignCourseID,\n      trainer_id: \"df3243sdfd\",\n      employee_id: temp\n    };\n    console.log(data);\n    axios({\n      url: \"http://localhost:5000/batch/create\",\n      method: \"POST\",\n      data: data // headers: { \"Content-Type\": \"multipart/form-data\" }\n\n    }).then(res => {\n      console.log(res);\n      setBatch_name(\"\");\n      temp = [...AllEmployees];\n\n      for (let i = 0; i < temp.length; i++) {\n        temp[i].isSelected = false;\n      }\n\n      ;\n      setAllEmployees(temp); // Trying to reset the select input after Form Submission\n      // var x = document.getElementById(\"assigncourseselect\");\n      // var option = document.createElement(\"option\");\n      // option.text = \"\";\n      // option.style.display=\"none\";\n      // x.add(option, x[0]);\n\n      toast.success('New Batch Created Successfully', {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      }); // setredirect(true);\n      // location.href = \"/app/Mentor/dashboard\"\n    }).catch(err => {\n      // console.log(\"Error in virtual\");\n      toast.error('Server Error! Please Try Later', {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container pd-top-60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav nav-pills nav-fill mb-5\",\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, AllBatches.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link active\",\n      className: i == 0 ? \"nav-link active\" : \"nav-link\",\n      id: `tab${i + 1}-tab`,\n      \"data-toggle\": \"tab\",\n      href: `#tab${i + 1}`,\n      role: \"tab\",\n      \"aria-controls\": `tab${i + 1}`,\n      \"aria-selected\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, data.batch_name));\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    // className=\"nav-link\"\n    className: AllBatches.length == 0 ? \"nav-link active\" : \"nav-link\",\n    id: `tab${AllBatches.length + 1}-tab`,\n    \"data-toggle\": \"tab\",\n    href: `#tab${AllBatches.length + 1}`,\n    role: \"tab\",\n    \"aria-controls\": `tab${AllBatches.length + 1}`,\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"Add Batch\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    id: \"myTabContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, AllBatches.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      // className=\"tab-pane fade show active\"\n      className: i == 0 ? \"tab-pane fade show active\" : \"tab-pane fade \",\n      id: `tab${i + 1}`,\n      role: \"tabpanel\",\n      \"aria-labelledby\": `tab${i + 1}-tab`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, data.batch_name, \" Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"box\",\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, \"Employee Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 19\n      }\n    }, data.employee_id.map((employees, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 27\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 27\n        }\n      }, employees.first_name, \" \", employees.last_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 27\n        }\n      }, employees.email));\n    })))));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: AllBatches.length == 0 ? \"tab-pane fade show active\" : \"tab-pane fade \" // className=\"tab-pane fade\"\n    ,\n    id: `tab${AllBatches.length + 1}`,\n    role: \"tabpanel\",\n    \"aria-labelledby\": `tab${AllBatches.length + 1}-tab`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"newbatchform\",\n    onSubmit: handlesubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"d-grid gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-outline-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  }, \"Create Batch\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mt-5\",\n    placeholder: \"Batch Name\",\n    id: \"exampleInputEmail1\",\n    value: batch_name,\n    onChange: e => {\n      setBatch_name(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"sel1\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }\n  }, \"Assign Course:\"), /*#__PURE__*/React.createElement(\"select\", {\n    class: \"form-control\",\n    id: \"assigncourseselect\",\n    required: true,\n    value: AssignCourseID,\n    onChange: e => {\n      setAssignCourseID(e.target.value);\n      console.log(AssignCourseID);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }), AllCourses.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 26\n      }\n    }, data.course_name, \" (\", data.mode, \")\");\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, \"Select Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"box\",\n    style: {\n      overflowX: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table  table-striped  table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 21\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, AllEmployees.sort((a, b) => a.isSelected == true ? -1 : 1).map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 25\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }\n    }, data.first_name, \" \", data.last_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, data.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 25\n      }\n    }, data.isSelected ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-danger btn-lg\",\n      value: data._id,\n      onClick: e => handleremoveclickfornewbatch(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 47\n      }\n    }, \"-\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-success btn-lg\",\n      value: data._id,\n      onClick: e => handleaddclickfornewbatch(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 199\n      }\n    }, \"+\") // !data.isSelected && <button value={data.id} onClick={(e)=>handleaddclickfornewbatch(e.target.value)}>{data.name}</button>\n    ));\n  }))))))));\n}\n\nexport default Batch;","map":{"version":3,"sources":["/Users/sarashaikh/Library/Mobile Documents/com~apple~CloudDocs/Repos/EdTech/src/components/section-components/batch.js"],"names":["React","useState","useEffect","axios","ToastContainer","toast","Batch","checking","setChecking","AllBatches","setAllBatches","AllEmployees","setAllEmployees","AllCourses","setAllCourses","AssignCourseID","setAssignCourseID","batch_name","setBatch_name","get","then","response","console","log","data","temp","i","length","isSelected","selectedfornewbatch","setselectedfornewbatch","handleaddclickfornewbatch","e","_id","handleremoveclickfornewbatch","handlesubmit","preventDefault","ele","document","getElementById","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","map","a","push","course_id","trainer_id","employee_id","url","method","res","success","catch","err","textAlign","overflowX","employees","index","first_name","last_name","email","target","value","display","course_name","mode","sort","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./CSS/batch.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Batch() {\n  const [checking, setChecking] = useState(0)\n  const [AllBatches, setAllBatches] = useState([])\n  const [AllEmployees, setAllEmployees] = useState([])\n  const [AllCourses, setAllCourses] = useState([])\n  const [AssignCourseID, setAssignCourseID] = useState(\"\");\n  const [batch_name, setBatch_name] = useState(\"\")\n  // AllEmployees.map((e) => {\n\n  // })\n  useEffect(() => {\n    axios.get('http://localhost:5000/user/all_for_trainer_batch_create/employees')\n      .then(response => {\n        console.log(\"HEllo\");\n        // console.log(response.data);\n        setAllEmployees(response.data);\n\n        // this.setState({ classes: response.data.result });\n      });\n\n    axios.get('http://localhost:5000/batch/1')\n      .then(response => {\n        console.log(\"All Batches API\");\n        // console.log(response.data);\n        setAllBatches(response.data);\n\n        // this.setState({ classes: response.data.result });\n      });\n\n\n\n      axios.get('http://localhost:5000/course/all')\n      .then(response => {\n        console.log(\"All Courses API\");\n        console.log(response.data);\n        setAllCourses(response.data);\n\n        // this.setState({ classes: response.data.result });\n      });\n\n    var temp = AllEmployees;\n    for (let i = 0; i < temp.length; i++) {\n      temp[i].isSelected = false;\n    }\n    // temp.map(obj=> ({ ...obj, isSelected: 'false' }))\n    setAllEmployees(temp);\n    console.log(AllEmployees);\n    // setRerender(!rerender);\n  }, [AllEmployees])\n\n  const [selectedfornewbatch, setselectedfornewbatch] = useState([])\n  const handleaddclickfornewbatch = (e) => {\n    console.log(e);\n    // setselectedfornewbatch(oldArray => [...oldArray,e] )\n    // console.log(selectedfornewbatch);\n    var temp = AllEmployees;\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i]._id == e) {\n        temp[i].isSelected = true;\n        console.log(\"Heyyy\")\n        break;\n      }\n\n    }\n    setChecking(checking + 1)\n    setAllEmployees(temp);\n    console.log(AllEmployees);\n  }\n  const handleremoveclickfornewbatch = (e) => {\n    var temp = AllEmployees;\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i]._id == e) {\n        temp[i].isSelected = false;\n        break;\n      }\n\n    }\n    setChecking(checking - 1)\n    setAllEmployees(temp);\n  }\n\n  const handlesubmit = (e) => {\n\n    e.preventDefault();\n    console.log(\"Submitted\");\n    var ele = document.getElementById(\"alertonsubmit\");\n    if (checking <= 0) {\n\n      // ele.classList.remove(\"d-none\");\n      // ele.classList.add(\"d-block\");\n      // console.log(\"Empty\");\n\n      toast.error('Please Select The Employees', {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return;\n    }\n    // ele.classList.remove(\"d-block\");\n    // ele.classList.add(\"d-none\");\n    var temp = [];\n    AllEmployees.map((a) => {\n      if (a.isSelected == true) {\n        temp.push(a._id);\n      }\n    })\n\n\n    // Temp will contain id's of all selected employees\n    console.log(temp);\n    const data={\n      batch_name:batch_name,\n      course_id:AssignCourseID,\n      trainer_id:\"df3243sdfd\",\n      employee_id:temp\n    }\n    console.log(data);\n    axios(\n      {\n        url: \"http://localhost:5000/batch/create\",\n        method: \"POST\",\n        data: data,\n        // headers: { \"Content-Type\": \"multipart/form-data\" }\n      })\n      .then(res => {\n        console.log(res);\n        setBatch_name(\"\");\n\n        temp=[...AllEmployees];\n        for (let i = 0; i < temp.length; i++) {\n            temp[i].isSelected=false;\n        };\n        setAllEmployees(temp);\n\n        // Trying to reset the select input after Form Submission\n        // var x = document.getElementById(\"assigncourseselect\");\n        // var option = document.createElement(\"option\");\n        // option.text = \"\";\n        // option.style.display=\"none\";\n        // x.add(option, x[0]);\n\n        \n        toast.success('New Batch Created Successfully', {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        // setredirect(true);\n\n        // location.href = \"/app/Mentor/dashboard\"\n      })\n      .catch(err => {\n        // console.log(\"Error in virtual\");\n        toast.error('Server Error! Please Try Later', {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      })\n  }\n\n\n  return (\n    <div className=\"container pd-top-60\">\n      <div className=\" text-center\">\n        <ul className=\"nav nav-pills nav-fill mb-5\" id=\"myTab\" role=\"tablist\">\n          {\n            AllBatches.map((data, i) => {\n              return <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  className={i == 0 ? \"nav-link active\" : \"nav-link\"}\n                  id={`tab${i + 1}-tab`}\n                  data-toggle=\"tab\"\n                  href={`#tab${i + 1}`}\n                  role=\"tab\"\n                  aria-controls={`tab${i + 1}`}\n                  aria-selected=\"true\"\n                >\n                  {data.batch_name}\n                </a>\n              </li>\n            })\n          }\n          {/* <li className=\"nav-item\">\n            <a\n              className=\"nav-link active\"\n              id=\"tab1-tab\"\n              data-toggle=\"tab\"\n              href=\"#tab1\"\n              role=\"tab\"\n              aria-controls=\"tab1\"\n              aria-selected=\"true\"\n            >\n              Batch 1\n            </a>\n          </li> */}\n          {/* <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"tab2-tab\"\n              data-toggle=\"tab\"\n              href=\"#tab2\"\n              role=\"tab\"\n              aria-controls=\"tab2\"\n              aria-selected=\"false\"\n            >\n              Batch 2\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"tab3-tab\"\n              data-toggle=\"tab\"\n              href=\"#tab3\"\n              role=\"tab\"\n              aria-controls=\"tab3\"\n              aria-selected=\"false\"\n            >\n              Batch 3\n            </a>\n          </li> */}\n\n          <li className=\"nav-item\">\n            <a\n              // className=\"nav-link\"\n              className={AllBatches.length == 0 ? \"nav-link active\" : \"nav-link\"}\n              id={`tab${AllBatches.length + 1}-tab`}\n              data-toggle=\"tab\"\n              href={`#tab${AllBatches.length + 1}`}\n              role=\"tab\"\n              aria-controls={`tab${AllBatches.length + 1}`}\n              aria-selected=\"false\"\n            >\n              Add Batch\n            </a>\n          </li>\n\n        </ul>\n      </div>\n      <div className=\"tab-content\" id=\"myTabContent\">\n        {\n          AllBatches.map((data, i) => {\n            return <div\n              // className=\"tab-pane fade show active\"\n              className={i == 0 ? \"tab-pane fade show active\" : \"tab-pane fade \"}\n              id={`tab${i + 1}`}\n              role=\"tabpanel\"\n              aria-labelledby={`tab${i + 1}-tab`}\n            >\n              <h5 style={{ textAlign: \"center\" }}>{data.batch_name} Employees</h5>\n\n              <div class=\"box\" style={{ overflowX: \"auto\" }}>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Employee Name</th>\n                      <th scope=\"col\">Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      data.employee_id.map((employees, index) => {\n                        return <tr>\n                          <th scope=\"row\">{index + 1}</th>\n                          <td>{employees.first_name} {employees.last_name}</td>\n                          <td>{employees.email}</td>\n                        </tr>\n                      })\n                    }\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          })\n        }\n        {/* <div\n          className=\"tab-pane fade show active\"\n          id=\"tab1\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab1-tab\"\n        >\n          <h5 style={{ textAlign: \"center\" }}>Batch 1 Employees</h5>\n          \n          <div class=\"box\" style={{overflowX:\"auto\"}}>\n          <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Employee Name</th>\n      <th scope=\"col\">Email</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">1</th>\n      <td>Mark</td>\n      <td>Otto@gmail.com</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">2</th>\n      <td>Jacob</td>\n      <td>Thornton@gmail.com</td>\n    </tr>\n    <tr>\n    <th scope=\"row\">3</th>\n      <td>Raju</td>\n      <td>Raju@gmail.com</td>\n    </tr>\n  </tbody>\n</table>\n          </div>\n        </div> */}\n\n\n        {/* <div className=\"tab-pane fade\"\n          id=\"tab2\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab2-tab\">\n          <h5 style={{ textAlign: \"center\" }}>Batch 2 Employees</h5>\n        \n          <div class=\"box\" style={{overflowX:\"auto\"}}>\n          <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Employee Name</th>\n      <th scope=\"col\">Email</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">1</th>\n      <td>Mark</td>\n      <td>Otto@gmail.com</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">2</th>\n      <td>Jacob</td>\n      <td>Thornton@gmail.com</td>\n    </tr>\n    <tr>\n    <th scope=\"row\">3</th>\n      <td>Raju</td>\n      <td>Raju@gmail.com</td>\n    </tr>\n  </tbody>\n</table>\n          </div>\n        </div> */}\n\n        {/* \n        <div className=\"tab-pane fade\"\n          id=\"tab3\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab3-tab\">\n          <h5 style={{ textAlign: \"center\" }}>Batch 3 Employees</h5>\n         \n          <div class=\"box\" style={{overflowX:\"auto\"}}>\n          <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Employee Name</th>\n      <th scope=\"col\">Email</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">1</th>\n      <td>Mark</td>\n      <td>Otto@gmail.com</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">2</th>\n      <td>Jacob</td>\n      <td>Thornton@gmail.com</td>\n    </tr>\n    <tr>\n    <th scope=\"row\">3</th>\n      <td>Raju</td>\n      <td>Raju@gmail.com</td>\n    </tr>\n  </tbody>\n</table>\n          </div>\n        </div> */}\n\n\n        <div\n          className={AllBatches.length == 0 ? \"tab-pane fade show active\" : \"tab-pane fade \"}\n          // className=\"tab-pane fade\"\n          id={`tab${AllBatches.length + 1}`}\n          role=\"tabpanel\"\n          aria-labelledby={`tab${AllBatches.length + 1}-tab`}>\n          <form id=\"newbatchform\" onSubmit={handlesubmit}>\n            {/* <h5 className=\"mb-5\" style={{ textAlign: \"center\" }}>Create Batch</h5> */}\n            <div class=\"d-grid gap-2\">\n              <center>\n                <button class=\"btn btn-outline-primary\" type=\"submit\"  >Create Batch</button>\n              </center>\n              {/* <div class=\"alert alert-danger d-none  fade show\"   id=\"alertonsubmit\" role=\"alert\">\n              Please Select The Employees\n            \n            </div> */}\n            </div>\n            \n            <input type=\"text\" className=\"form-control mt-5\" placeholder=\"Batch Name\" id=\"exampleInputEmail1\" value={batch_name} onChange={(e)=>{setBatch_name(e.target.value)}} required />\n            <label for=\"sel1\" className=\"mt-3\">Assign Course:</label>\n            <select class=\"form-control\" id=\"assigncourseselect\" required  value={AssignCourseID} onChange={(e)=>{setAssignCourseID(e.target.value);console.log(AssignCourseID);}}>\n              {/* <option disabled selected hidden>Select</option> */}\n              <option style={{display:\"none\"}}></option>\n              {/* <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option> */}\n              {\n                AllCourses.map((data,i)=>{\n                  return <option value={data._id}>\n                    {data.course_name} ({data.mode})\n                  </option>\n                })\n              }\n            </select>\n            <h6 className=\"mt-5\">Select Employees</h6>\n            <div>\n              {/* <table class=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n              {\n                selectedfornewbatch.map((data,i)=>{\n                  return  <tr>\n                  <th scope=\"row\">{i+1}</th>\n                  <td>{data.name}</td>\n                  <td>mayur@gmail.com</td>\n                  \n                  <td><button type=\"button\"  value={data.id} onClick={(e)=>handleaddclickfornewbatch(e.target.value)} class=\"btn btn-success\">+</button></td>\n                </tr>\n                })\n              }\n                \n              \n              </tbody>\n            </table> */}\n            </div>\n            {/* <input\n            type=\"text\"\n            class=\"form-control searchemployee\"\n            autoFocus\n            placeholder=\"Search...\"\n          /> */}\n            <div class=\"box\" style={{ overflowX: \"auto\" }}>\n              <table class=\"table  table-striped  table-hover\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {\n                AllEmployees?.map((data,i)=>{\n                  return  data.isSelected==true? <tr>\n                  <th scope=\"row\">{i+1}</th>\n                  <td>{data.name}</td>\n                  <td>mayur@gmail.com</td>\n                  \n                  <td><button type=\"button\"  value={data.id} onClick={(e)=>handleaddclickfornewbatch(e.target.value)} class=\"btn btn-success\">+</button></td>\n                </tr>:null\n                })\n              } */}\n                  {\n\n                    AllEmployees.sort((a, b) => a.isSelected == true ? -1 : 1).map((data, i) => {\n                      return <tr>\n                        <th scope=\"row\">{i + 1}</th>\n                        <td>{data.first_name} {data.last_name}</td>\n                        <td>{data.email}</td>\n                        <td>\n                          {\n                            data.isSelected ? <button type=\"button\" class=\"btn btn-outline-danger btn-lg\" value={data._id} onClick={(e) => handleremoveclickfornewbatch(e.target.value)}>-</button> : <button type=\"button\" class=\"btn btn-outline-success btn-lg\" value={data._id} onClick={(e) => handleaddclickfornewbatch(e.target.value)}>+</button>\n                            // !data.isSelected && <button value={data.id} onClick={(e)=>handleaddclickfornewbatch(e.target.value)}>{data.name}</button>\n                          }\n                        </td>\n                        {/* <td><button type=\"button\"  value={data.id} onClick={(e)=>handleaddclickfornewbatch(e.target.value)} class=\"btn btn-success\">+</button></td> */}\n                      </tr>\n                    })\n                  }\n                  {/* <tr>\n                  <th scope=\"row\">1</th>\n                  <td>Mayur</td>\n                  <td>mayur@gmail.com</td>\n                  \n                  <td><button type=\"button\"  onClick={handleaddclickfornewbatch} class=\"btn btn-success\">+</button></td>\n                </tr> */}\n\n                </tbody>\n              </table>\n\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Batch;\n"]},"metadata":{},"sourceType":"module"}